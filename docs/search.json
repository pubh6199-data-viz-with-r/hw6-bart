[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Final Project: GW Tobacco History Completeness Pilot Dashboard | PUBH 6199: Visualizing Data with R",
    "section": "",
    "text": "Code\nlibrary(readr)\nlibrary(tidyverse)\n\n\n#| label: setup\n#| include: false\n\nknitr::opts_chunk$set(\n    warning = FALSE,\n    message = FALSE,\n    fig.path = \"figs/\",\n    fig.width = 7.252,\n    fig.height = 4,\n    comment = \"#&gt;\",\n    fig.retina = 3\n)"
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Final Project: GW Tobacco History Completeness Pilot Dashboard | PUBH 6199: Visualizing Data with R",
    "section": "Introduction",
    "text": "Introduction\nCancer is the leading cause of death among American adults &gt;45yo; lung cancer is the leading cause of cancer death and 3rd leading cause of death in adults in the U.S. (and worldwide) [1]. Lung cancer is responsible for more deaths annually than the next 3 leading causes of cancer death (colon, breast, prostate) combined [2]. This is also true in the District. There is a screening test for lung cancer that reduces lung cancer mortality by at least 20% [3], but lung cancer screening (LCS) is severely under-utilized more than a decade after the USPSTF first recommended it [4]. Because lung cancer is by far the #1 cancer killer, LCS could potentially save more lives than breast or colon cancer screening. Yet, while screening participation for breast cancer reached 81% in Washington, DC in 2020 and 76% nationwide in 2021 [5], the LCS rate was only 1.5% in DC and 4.5% nationally in 2023 [6].\nBecause the eligibility criteria for LCS require detailed tobacco history information, the tobacco history documented in discrete data fields in the patient electronic chart are often inadequate to determine eligibility and prompt screening. Ensuring a high level of complete tobacco history documentation is therefore a critical first step to increasing LCS and decreasing lung cancer mortality."
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "Final Project: [YOUR TITLE HERE] | PUBH 6199: Visualizing Data with R",
    "section": "Data",
    "text": "Data\nDescribe your data source(s), including where it came from, the key variables, and any pre-processing steps.\n\n\nCode\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(shiny)\nlibrary(dplyr)\n\ndata &lt;- read_csv(\"data/my_data.csv\")\nglimpse(data)"
  },
  {
    "objectID": "index.html#visualizatiob-1-title-here",
    "href": "index.html#visualizatiob-1-title-here",
    "title": "Final Project: [YOUR TITLE HERE]",
    "section": "Visualizatiob 1: [Title Here]",
    "text": "Visualizatiob 1: [Title Here]\nDescribe what this plot shows, and why it’s important.\n\n\nCode\n# your code here"
  },
  {
    "objectID": "index.html#visualization-2-title-here",
    "href": "index.html#visualization-2-title-here",
    "title": "Final Project: [YOUR TITLE HERE] | PUBH 6199: Visualizing Data with R",
    "section": "Visualization 2: [Title Here]",
    "text": "Visualization 2: [Title Here]\nDescribe what this plot shows, and why it’s important.\n\n\nCode\n# your code here"
  },
  {
    "objectID": "index.html#visualization-3-title-here",
    "href": "index.html#visualization-3-title-here",
    "title": "Final Project: [YOUR TITLE HERE] | PUBH 6199: Visualizing Data with R",
    "section": "Visualization 3: [Title Here]",
    "text": "Visualization 3: [Title Here]\nDescribe what this plot shows, and why it’s important.\n\n\nCode\n# your code here"
  },
  {
    "objectID": "index.html#or-shiny-app-title-here",
    "href": "index.html#or-shiny-app-title-here",
    "title": "Final Project: [YOUR TITLE HERE] | PUBH 6199: Visualizing Data with R",
    "section": "OR Shiny app: [Title Here]",
    "text": "OR Shiny app: [Title Here]\nIf you choose to create a Shiny app, describe the app’s purpose and functionality. Save your code inside the shiny-app/ folder, replace the URL below with your app’s URL\nClick here to open the interactive Shiny app"
  },
  {
    "objectID": "index.html#interpretation",
    "href": "index.html#interpretation",
    "title": "Final Project: [YOUR TITLE HERE] | PUBH 6199: Visualizing Data with R",
    "section": "Interpretation",
    "text": "Interpretation\nSummarize your key findings. What do your visualizations reveal?"
  },
  {
    "objectID": "index.html#limitations",
    "href": "index.html#limitations",
    "title": "Final Project: GW Tobacco History Completeness Pilot Dashboard | PUBH 6199: Visualizing Data with R",
    "section": "Limitations",
    "text": "Limitations\nThe design of the visualizations & dashboard was somewhat limited by the large number of specialties and especially staff, which made it challenging to visualize all data clearly in a single plot.\nAdditionally, it was important to maintain full anonymity for this public project, so we could not include staff names or data linkages, so they cannot use this dashboard in its current form to see their own performance.\nThe authentication (login-required) mode of shinyapps.io requires a $50/mo or $550/y subscription, and so more detailed information could not be used.\nImportantly, the data used in this project was incomplete – only a subset of visits were included and development continues on creating a final dataset pulled from the EMR. Results may differ with the complete data."
  },
  {
    "objectID": "index.html#conclusion",
    "href": "index.html#conclusion",
    "title": "Final Project: GW Tobacco History Completeness Pilot Dashboard | PUBH 6199: Visualizing Data with R",
    "section": "Conclusion",
    "text": "Conclusion\nThis was actually the first time we were able to visualize data from this pilot project, although it was an incomplete dataset. Even though the trends are not as promising as we had hoped, it’s still exciting to see the data displayed. It will also serve as a great tool for reporting on the pilot program’s progress and outcomes with the funding agency and GW Medicine leadership.\nA version of this dashboard will go into actual use at GW Medicine to help track the completeness of tobacco history documentation over time, and to identify top performers. The pilot participants will be able to track and compare their own performance. Hopefully, this will increase engagement and motivation."
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "Final Project: GW Tobacco History Completeness Pilot Dashboard | PUBH 6199: Visualizing Data with R",
    "section": "References",
    "text": "References\n\nCenters for Disease Control and Prevention, National Center for Health Statistics. National Vital Statistics System, Mortality 2018-2023 on CDC WONDER Online Database, released in 2024. Data are from the Multiple Cause of Death Files, 2018-2023, as compiled from data provided by the 57 vital statistics jurisdictions through the Vital Statistics Cooperative Program. Accessed at http://wonder.cdc.gov/ucd-icd10-expanded.html on Jun 22, 2025 5:09:41 PM\nAmerican Cancer Society. Facts & Figures 2025. American Cancer Society. Atlanta, Ga. 2025.\nReduced lung-cancer mortality with low-dose computed tomographic screening. (2011). New England Journal of Medicine, 365(5), 395–409. https://doi.org/10.1056/nejmoa1102873\nMoyer, V. A. (2014). Screening for lung cancer: U.S. Preventive Services Task Force Recommendation Statement. Annals of Internal Medicine, 160(5), 330–338. https://doi.org/10.7326/m13-2771\nAmerican Cancer Society. Cancer Prevention & Early Detection Facts & Figures 2023-2024.\nAmerican Lung Association. (2023). (rep.). State of Lung Cancer: 2023 Report. Chicago, IL.\n“All analyses were conducted in R (R version 4.0.1)”"
  },
  {
    "objectID": "data_init.html",
    "href": "data_init.html",
    "title": "dataset initialization (de-duplicate & anonymize)",
    "section": "",
    "text": "# read in C:\\Users\\sorae\\Documents\\RStudio\\PUBH6199\\hw6-bart\\data_raw\\MFA Tobacco HX 2025-3-1 - 2025-5-31 pt anon.xlsx\nlibrary(readxl)\nlibrary(dplyr)\nmfa_tobacco_hx &lt;- read_excel(file.path(\"data_raw\", \"MFA Tobacco HX 2025-3-1 - 2025-5-31 pt anon.xlsx\"))\n\nglimpse(mfa_tobacco_hx)\n\n#&gt; Rows: 10,198\n#&gt; Columns: 20\n#&gt; $ Location                               &lt;chr&gt; \"Bethesda\", \"Foggy Bottom\", \"Fo…\n#&gt; $ Department                             &lt;chr&gt; \"BETHESDA PRIMARY CARE\", \"FB CA…\n#&gt; $ `Visit ID`                             &lt;dbl&gt; 68488509, 68299325, 67850022, 6…\n#&gt; $ `Encounter Contact Date`               &lt;dttm&gt; 2025-03-07, 2025-03-27, 2025-0…\n#&gt; $ `VISIT TYPE`                           &lt;chr&gt; \"Office Visit\", \"Office Visit\",…\n#&gt; $ `Roomed By`                            &lt;chr&gt; \"CHAVEZ, XIOMARA\", \"CHO, GUNHEE…\n#&gt; $ `Roomed By Provider Type`              &lt;chr&gt; \"Medical Assistant\", \"Medical A…\n#&gt; $ `Tobacco User`                         &lt;chr&gt; \"Never\", \"Never\", \"Yes\", \"Never…\n#&gt; $ `Smoking From`                         &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ `Smoking To`                           &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ `Pack/Day`                             &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ `Years Smoking`                        &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ `Years Quitting`                       &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ TotalPackYears                         &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ StartDateCount                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n#&gt; $ QuitDateCount                          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n#&gt; $ MultipleStartOrQuitDatesFlag           &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n#&gt; $ SCREENED_FOR_LUNG_CANCER               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n#&gt; $ PATIENT_LUNG_CANCER_SCREEN_ELIGIBILITY &lt;chr&gt; \"Not Eligible\", \"Not Eligible\",…\n#&gt; $ `Tobacco History Complete`             &lt;chr&gt; \"Complete\", \"Complete\", \"Not Co…"
  },
  {
    "objectID": "data_init.html#import-data",
    "href": "data_init.html#import-data",
    "title": "dataset initialization (de-duplicate & anonymize)",
    "section": "",
    "text": "# read in C:\\Users\\sorae\\Documents\\RStudio\\PUBH6199\\hw6-bart\\data_raw\\MFA Tobacco HX 2025-3-1 - 2025-5-31 pt anon.xlsx\nlibrary(readxl)\nlibrary(dplyr)\nmfa_tobacco_hx &lt;- read_excel(file.path(\"data_raw\", \"MFA Tobacco HX 2025-3-1 - 2025-5-31 pt anon.xlsx\"))\n\nglimpse(mfa_tobacco_hx)\n\n#&gt; Rows: 10,198\n#&gt; Columns: 20\n#&gt; $ Location                               &lt;chr&gt; \"Bethesda\", \"Foggy Bottom\", \"Fo…\n#&gt; $ Department                             &lt;chr&gt; \"BETHESDA PRIMARY CARE\", \"FB CA…\n#&gt; $ `Visit ID`                             &lt;dbl&gt; 68488509, 68299325, 67850022, 6…\n#&gt; $ `Encounter Contact Date`               &lt;dttm&gt; 2025-03-07, 2025-03-27, 2025-0…\n#&gt; $ `VISIT TYPE`                           &lt;chr&gt; \"Office Visit\", \"Office Visit\",…\n#&gt; $ `Roomed By`                            &lt;chr&gt; \"CHAVEZ, XIOMARA\", \"CHO, GUNHEE…\n#&gt; $ `Roomed By Provider Type`              &lt;chr&gt; \"Medical Assistant\", \"Medical A…\n#&gt; $ `Tobacco User`                         &lt;chr&gt; \"Never\", \"Never\", \"Yes\", \"Never…\n#&gt; $ `Smoking From`                         &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ `Smoking To`                           &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ `Pack/Day`                             &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ `Years Smoking`                        &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ `Years Quitting`                       &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ TotalPackYears                         &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ StartDateCount                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n#&gt; $ QuitDateCount                          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n#&gt; $ MultipleStartOrQuitDatesFlag           &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n#&gt; $ SCREENED_FOR_LUNG_CANCER               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n#&gt; $ PATIENT_LUNG_CANCER_SCREEN_ELIGIBILITY &lt;chr&gt; \"Not Eligible\", \"Not Eligible\",…\n#&gt; $ `Tobacco History Complete`             &lt;chr&gt; \"Complete\", \"Complete\", \"Not Co…"
  },
  {
    "objectID": "data_init.html#clean-up-the-column-names",
    "href": "data_init.html#clean-up-the-column-names",
    "title": "dataset initialization (de-duplicate & anonymize)",
    "section": "clean up the column names",
    "text": "clean up the column names\n\nlibrary(janitor)\nmfa_tobacco_hx |&gt; janitor::clean_names() -&gt; mfa_tobacco_hx\n\nglimpse(mfa_tobacco_hx)\n\n#&gt; Rows: 10,198\n#&gt; Columns: 20\n#&gt; $ location                               &lt;chr&gt; \"Bethesda\", \"Foggy Bottom\", \"Fo…\n#&gt; $ department                             &lt;chr&gt; \"BETHESDA PRIMARY CARE\", \"FB CA…\n#&gt; $ visit_id                               &lt;dbl&gt; 68488509, 68299325, 67850022, 6…\n#&gt; $ encounter_contact_date                 &lt;dttm&gt; 2025-03-07, 2025-03-27, 2025-0…\n#&gt; $ visit_type                             &lt;chr&gt; \"Office Visit\", \"Office Visit\",…\n#&gt; $ roomed_by                              &lt;chr&gt; \"CHAVEZ, XIOMARA\", \"CHO, GUNHEE…\n#&gt; $ roomed_by_provider_type                &lt;chr&gt; \"Medical Assistant\", \"Medical A…\n#&gt; $ tobacco_user                           &lt;chr&gt; \"Never\", \"Never\", \"Yes\", \"Never…\n#&gt; $ smoking_from                           &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ smoking_to                             &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ pack_day                               &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ years_smoking                          &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ years_quitting                         &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ total_pack_years                       &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n#&gt; $ start_date_count                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n#&gt; $ quit_date_count                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n#&gt; $ multiple_start_or_quit_dates_flag      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n#&gt; $ screened_for_lung_cancer               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n#&gt; $ patient_lung_cancer_screen_eligibility &lt;chr&gt; \"Not Eligible\", \"Not Eligible\",…\n#&gt; $ tobacco_history_complete               &lt;chr&gt; \"Complete\", \"Complete\", \"Not Co…\n\n# rename long column names to shorter names\nmfa_tobacco_hx &lt;- mfa_tobacco_hx %&gt;%\n  rename(\n    date = encounter_contact_date,\n    roomed_by_prov_type = roomed_by_provider_type,\n    hx_complete = tobacco_history_complete,\n    lcs_eligible = patient_lung_cancer_screen_eligibility\n  )"
  },
  {
    "objectID": "data_init.html#remove-null",
    "href": "data_init.html#remove-null",
    "title": "dataset initialization (de-duplicate & anonymize)",
    "section": "remove NULL",
    "text": "remove NULL\n\n# check for N/A\nmfa_tobacco_hx %&gt;%\n  select(roomed_by) %&gt;%\n  filter(is.na(roomed_by)) \n\n#&gt; # A tibble: 0 × 1\n#&gt; # ℹ 1 variable: roomed_by &lt;chr&gt;\n\n# 0 rows with roomed_by == NA\n\n# check for NULL\nmfa_tobacco_hx %&gt;%\n  select(roomed_by) %&gt;%\n  filter(roomed_by == \"NULL\") %&gt;% \n  count()\n\n#&gt; # A tibble: 1 × 1\n#&gt;       n\n#&gt;   &lt;int&gt;\n#&gt; 1   932\n\n# 308 rows with roomed_by == \"NULL\"\n\n# remove rows with roomed_by == \"NULL\"\nmfa_tobacco_hx &lt;- mfa_tobacco_hx %&gt;%\n  filter(roomed_by != \"NULL\")\n# check that NULL rows are removed\nmfa_tobacco_hx %&gt;%\n  select(roomed_by) %&gt;%\n  filter(roomed_by == \"NULL\") %&gt;% \n  count()\n\n#&gt; # A tibble: 1 × 1\n#&gt;       n\n#&gt;   &lt;int&gt;\n#&gt; 1     0\n\n# 0 rows with roomed_by == \"NULL\""
  },
  {
    "objectID": "data_init.html#convert-roomed-by-names-to-numeric-id",
    "href": "data_init.html#convert-roomed-by-names-to-numeric-id",
    "title": "dataset initialization (de-duplicate & anonymize)",
    "section": "convert Roomed By names to numeric ID",
    "text": "convert Roomed By names to numeric ID\n\n# identify distinct names\nmfa_tobacco_hx %&gt;%\n  select(roomed_by) %&gt;%\n  distinct() %&gt;%\n  arrange(roomed_by)\n\n#&gt; # A tibble: 300 × 1\n#&gt;    roomed_by          \n#&gt;    &lt;chr&gt;              \n#&gt;  1 ABDALLA, YOOSIF    \n#&gt;  2 ABUBAKER, TEBIANNE \n#&gt;  3 AHMAD, SHAHZAD     \n#&gt;  4 AIKEN-AMES, WYKENIA\n#&gt;  5 AKPINIBOYA, STEPHEN\n#&gt;  6 AKSELROD, HANA     \n#&gt;  7 ALCHALABI, TANIA   \n#&gt;  8 ALEMU, AMANUEL     \n#&gt;  9 ALZABEN, TAYLOR    \n#&gt; 10 AMOAH, NATHANIEL   \n#&gt; # ℹ 290 more rows\n\n# 211 unique names\n\n# assign a numeric ID to each roomed_by unique name\nmfa_tobacco_hx &lt;- mfa_tobacco_hx %&gt;%\n  mutate(roomed_by_ID = as.numeric(factor(roomed_by, levels = unique(roomed_by))))\nglimpse(mfa_tobacco_hx)\n\n#&gt; Rows: 9,266\n#&gt; Columns: 21\n#&gt; $ location                          &lt;chr&gt; \"Bethesda\", \"Foggy Bottom\", \"Foggy B…\n#&gt; $ department                        &lt;chr&gt; \"BETHESDA PRIMARY CARE\", \"FB CARDIOL…\n#&gt; $ visit_id                          &lt;dbl&gt; 68488509, 68299325, 67850022, 680482…\n#&gt; $ date                              &lt;dttm&gt; 2025-03-07, 2025-03-27, 2025-03-12,…\n#&gt; $ visit_type                        &lt;chr&gt; \"Office Visit\", \"Office Visit\", \"Off…\n#&gt; $ roomed_by                         &lt;chr&gt; \"CHAVEZ, XIOMARA\", \"CHO, GUNHEE\", \"H…\n#&gt; $ roomed_by_prov_type               &lt;chr&gt; \"Medical Assistant\", \"Medical Assist…\n#&gt; $ tobacco_user                      &lt;chr&gt; \"Never\", \"Never\", \"Yes\", \"Never\", \"N…\n#&gt; $ smoking_from                      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ smoking_to                        &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ pack_day                          &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_smoking                     &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_quitting                    &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ total_pack_years                  &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ start_date_count                  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ quit_date_count                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ multiple_start_or_quit_dates_flag &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ screened_for_lung_cancer          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ lcs_eligible                      &lt;chr&gt; \"Not Eligible\", \"Not Eligible\", \"Not…\n#&gt; $ hx_complete                       &lt;chr&gt; \"Complete\", \"Complete\", \"Not Complet…\n#&gt; $ roomed_by_ID                      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1…\n\n# check distinct roomed_by_ID\nmfa_tobacco_hx %&gt;%\n  select(roomed_by_ID) %&gt;%\n  distinct() %&gt;%\n  arrange(roomed_by_ID)\n\n#&gt; # A tibble: 300 × 1\n#&gt;    roomed_by_ID\n#&gt;           &lt;dbl&gt;\n#&gt;  1            1\n#&gt;  2            2\n#&gt;  3            3\n#&gt;  4            4\n#&gt;  5            5\n#&gt;  6            6\n#&gt;  7            7\n#&gt;  8            8\n#&gt;  9            9\n#&gt; 10           10\n#&gt; # ℹ 290 more rows\n\n# 211 unique roomed_by_IDs"
  },
  {
    "objectID": "data_init.html#remove-duplicates",
    "href": "data_init.html#remove-duplicates",
    "title": "dataset initialization (de-duplicate & anonymize)",
    "section": "remove duplicates",
    "text": "remove duplicates\n\n# check for duplicates (&gt;1 row with same visit_id)\nmfa_tobacco_hx %&gt;%\n  group_by(visit_id) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  distinct(visit_id)\n\n#&gt; # A tibble: 456 × 1\n#&gt; # Groups:   visit_id [456]\n#&gt;    visit_id\n#&gt;       &lt;dbl&gt;\n#&gt;  1 68876021\n#&gt;  2 68281253\n#&gt;  3 68972330\n#&gt;  4 68481400\n#&gt;  5 68804341\n#&gt;  6 68799712\n#&gt;  7 68745574\n#&gt;  8 67660584\n#&gt;  9 68539554\n#&gt; 10 68979682\n#&gt; # ℹ 446 more rows\n\n# 180 visit_ids have duplicates\n\n# count non-duplicate visit_ids\nmfa_tobacco_hx %&gt;%\n  group_by(visit_id) %&gt;%\n  filter(n() == 1) %&gt;%\n  ungroup() %&gt;%\n  count()\n\n#&gt; # A tibble: 1 × 1\n#&gt;       n\n#&gt;   &lt;int&gt;\n#&gt; 1  8257\n\n# 2901 non-duplicate visit_ids\n\n# count total number of rows with duplicate visit_ids (not total duplicate visit_ids, but total rows with those visit_ids)\nmfa_tobacco_hx %&gt;%\n  group_by(visit_id) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  ungroup() %&gt;%\n  count()\n\n#&gt; # A tibble: 1 × 1\n#&gt;       n\n#&gt;   &lt;int&gt;\n#&gt; 1  1009\n\n# 402 rows with duplicate visit_ids\n\nglimpse(mfa_tobacco_hx)\n\n#&gt; Rows: 9,266\n#&gt; Columns: 21\n#&gt; $ location                          &lt;chr&gt; \"Bethesda\", \"Foggy Bottom\", \"Foggy B…\n#&gt; $ department                        &lt;chr&gt; \"BETHESDA PRIMARY CARE\", \"FB CARDIOL…\n#&gt; $ visit_id                          &lt;dbl&gt; 68488509, 68299325, 67850022, 680482…\n#&gt; $ date                              &lt;dttm&gt; 2025-03-07, 2025-03-27, 2025-03-12,…\n#&gt; $ visit_type                        &lt;chr&gt; \"Office Visit\", \"Office Visit\", \"Off…\n#&gt; $ roomed_by                         &lt;chr&gt; \"CHAVEZ, XIOMARA\", \"CHO, GUNHEE\", \"H…\n#&gt; $ roomed_by_prov_type               &lt;chr&gt; \"Medical Assistant\", \"Medical Assist…\n#&gt; $ tobacco_user                      &lt;chr&gt; \"Never\", \"Never\", \"Yes\", \"Never\", \"N…\n#&gt; $ smoking_from                      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ smoking_to                        &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ pack_day                          &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_smoking                     &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_quitting                    &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ total_pack_years                  &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ start_date_count                  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ quit_date_count                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ multiple_start_or_quit_dates_flag &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ screened_for_lung_cancer          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ lcs_eligible                      &lt;chr&gt; \"Not Eligible\", \"Not Eligible\", \"Not…\n#&gt; $ hx_complete                       &lt;chr&gt; \"Complete\", \"Complete\", \"Not Complet…\n#&gt; $ roomed_by_ID                      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1…\n\n# 3303 rows\n3303-2901\n\n#&gt; [1] 402\n\n# 402 matches 402 rows with duplicate visit_ids\n\n# show all rows with duplicates (for me to check consistency, incl with LCS eligibility)\nmfa_tobacco_hx %&gt;%\n  group_by(visit_id) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  select(visit_id, roomed_by, hx_complete, lcs_eligible) %&gt;%\n  arrange(visit_id)\n\n#&gt; # A tibble: 1,009 × 4\n#&gt; # Groups:   visit_id [456]\n#&gt;    visit_id roomed_by               hx_complete  lcs_eligible\n#&gt;       &lt;dbl&gt; &lt;chr&gt;                   &lt;chr&gt;        &lt;chr&gt;       \n#&gt;  1 65175613 FERNANDEZ, GISELLE DIAZ Complete     Not Eligible\n#&gt;  2 65175613 FERNANDEZ, GISELLE DIAZ Complete     Not Eligible\n#&gt;  3 65331404 ERBY, AAYANNA           Complete     Not Eligible\n#&gt;  4 65331404 ERBY, AAYANNA           Complete     Not Eligible\n#&gt;  5 65559502 RODRIGUES, KRISTEN      Not Complete Not Eligible\n#&gt;  6 65559502 RODRIGUES, KRISTEN      Not Complete Not Eligible\n#&gt;  7 65744148 WIMBUSH, PATRICE        Complete     Not Eligible\n#&gt;  8 65744148 WIMBUSH, PATRICE        Complete     Not Eligible\n#&gt;  9 66223200 FANGMEYER, SARAH        Complete     Not Eligible\n#&gt; 10 66223200 FANGMEYER, SARAH        Complete     Not Eligible\n#&gt; # ℹ 999 more rows\n\n## keep all rows with unique visit_ids\nmfa_tobacco_data &lt;- mfa_tobacco_hx %&gt;%\n  group_by(visit_id) %&gt;%\n  filter(n() == 1) %&gt;%\n  ungroup()\nglimpse(mfa_tobacco_data)\n\n#&gt; Rows: 8,257\n#&gt; Columns: 21\n#&gt; $ location                          &lt;chr&gt; \"Bethesda\", \"Foggy Bottom\", \"Foggy B…\n#&gt; $ department                        &lt;chr&gt; \"BETHESDA PRIMARY CARE\", \"FB CARDIOL…\n#&gt; $ visit_id                          &lt;dbl&gt; 68488509, 68299325, 67850022, 680482…\n#&gt; $ date                              &lt;dttm&gt; 2025-03-07, 2025-03-27, 2025-03-12,…\n#&gt; $ visit_type                        &lt;chr&gt; \"Office Visit\", \"Office Visit\", \"Off…\n#&gt; $ roomed_by                         &lt;chr&gt; \"CHAVEZ, XIOMARA\", \"CHO, GUNHEE\", \"H…\n#&gt; $ roomed_by_prov_type               &lt;chr&gt; \"Medical Assistant\", \"Medical Assist…\n#&gt; $ tobacco_user                      &lt;chr&gt; \"Never\", \"Never\", \"Yes\", \"Never\", \"N…\n#&gt; $ smoking_from                      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ smoking_to                        &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ pack_day                          &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_smoking                     &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_quitting                    &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ total_pack_years                  &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ start_date_count                  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ quit_date_count                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ multiple_start_or_quit_dates_flag &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ screened_for_lung_cancer          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ lcs_eligible                      &lt;chr&gt; \"Not Eligible\", \"Not Eligible\", \"Not…\n#&gt; $ hx_complete                       &lt;chr&gt; \"Complete\", \"Complete\", \"Not Complet…\n#&gt; $ roomed_by_ID                      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1…\n\n## for any duplicate visit_ids, keep the first instance where tobacco_history_complete == \"Complete\";\n## if none of the rows have tobacco_history_complete == \"Complete\", then keep the first instance\n## (this became more complicated, where I had to de-duplicate the records with hx_complete values all the same v not all the same separately)\n## (it feels like there should be a more efficient way to do this, but I couldn't figure it out)\n\n# create mfa_tobacco_dupl to hold the duplicates\nmfa_tobacco_dupl &lt;- mfa_tobacco_hx %&gt;%\n  group_by(visit_id) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  ungroup()\nglimpse(mfa_tobacco_dupl)\n\n#&gt; Rows: 1,009\n#&gt; Columns: 21\n#&gt; $ location                          &lt;chr&gt; \"Foggy Bottom\", \"Foggy Bottom\", \"Wes…\n#&gt; $ department                        &lt;chr&gt; \"FB PRIMARY CARE\", \"FB PRIMARY CARE\"…\n#&gt; $ visit_id                          &lt;dbl&gt; 68876021, 68876021, 68281253, 682812…\n#&gt; $ date                              &lt;dttm&gt; 2025-03-20, 2025-03-20, 2025-03-03,…\n#&gt; $ visit_type                        &lt;chr&gt; \"Office Visit\", \"Office Visit\", \"Off…\n#&gt; $ roomed_by                         &lt;chr&gt; \"PATTERSON, MYRAH\", \"PATTERSON, MYRA…\n#&gt; $ roomed_by_prov_type               &lt;chr&gt; \"Medical Assistant\", \"Medical Assist…\n#&gt; $ tobacco_user                      &lt;chr&gt; \"Quit\", \"Quit\", \"Quit\", \"Quit\", \"Qui…\n#&gt; $ smoking_from                      &lt;chr&gt; \"29952\", \"28491\", \"33604\", \"31778\", …\n#&gt; $ smoking_to                        &lt;chr&gt; \"29952\", \"29952\", \"33604\", \"33604\", …\n#&gt; $ pack_day                          &lt;chr&gt; \"0\", \"0.5\", \"0\", \"0.5\", \"0\", \"0.25\",…\n#&gt; $ years_smoking                     &lt;chr&gt; \"43.5\", \"4\", \"33.5\", \"5\", \"25.5\", \"1…\n#&gt; $ years_quitting                    &lt;chr&gt; \"43.5\", \"43.5\", \"33.5\", \"33.5\", \"25.…\n#&gt; $ total_pack_years                  &lt;chr&gt; \"47.5\", \"47.5\", \"38.5\", \"38.5\", \"36.…\n#&gt; $ start_date_count                  &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, …\n#&gt; $ quit_date_count                   &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, …\n#&gt; $ multiple_start_or_quit_dates_flag &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n#&gt; $ screened_for_lung_cancer          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, …\n#&gt; $ lcs_eligible                      &lt;chr&gt; \"Not Eligible\", \"Not Eligible\", \"Not…\n#&gt; $ hx_complete                       &lt;chr&gt; \"Complete\", \"Complete\", \"Complete\", …\n#&gt; $ roomed_by_ID                      &lt;dbl&gt; 15, 15, 45, 45, 48, 48, 48, 54, 54, …\n\n# 402 rows with duplicate visit_ids\nmfa_tobacco_dupl %&gt;%\n  distinct(visit_id)\n\n#&gt; # A tibble: 456 × 1\n#&gt;    visit_id\n#&gt;       &lt;dbl&gt;\n#&gt;  1 68876021\n#&gt;  2 68281253\n#&gt;  3 68972330\n#&gt;  4 68481400\n#&gt;  5 68804341\n#&gt;  6 68799712\n#&gt;  7 68745574\n#&gt;  8 67660584\n#&gt;  9 68539554\n#&gt; 10 68979682\n#&gt; # ℹ 446 more rows\n\n# representing 180 unique visit_ids\n\n# check if for a given visit_id with more than 1 row, all rows have the same value for lcs_eligible\nmfa_tobacco_dupl %&gt;%\n  group_by(visit_id) %&gt;%\n  summarise(lcs_eligible_unique = n_distinct(lcs_eligible)) %&gt;%\n  filter(lcs_eligible_unique &gt; 1)\n\n#&gt; # A tibble: 2 × 2\n#&gt;   visit_id lcs_eligible_unique\n#&gt;      &lt;dbl&gt;               &lt;int&gt;\n#&gt; 1 69247433                   2\n#&gt; 2 69299382                   2\n\n# checking to make sure this worked properly\nmfa_tobacco_dupl %&gt;%\n  group_by(visit_id) %&gt;%\n  summarise(lcs_eligible_unique = n_distinct(lcs_eligible))\n\n#&gt; # A tibble: 456 × 2\n#&gt;    visit_id lcs_eligible_unique\n#&gt;       &lt;dbl&gt;               &lt;int&gt;\n#&gt;  1 65175613                   1\n#&gt;  2 65331404                   1\n#&gt;  3 65559502                   1\n#&gt;  4 65744148                   1\n#&gt;  5 66223200                   1\n#&gt;  6 66725789                   1\n#&gt;  7 66735924                   1\n#&gt;  8 66768306                   1\n#&gt;  9 66853773                   1\n#&gt; 10 66885925                   1\n#&gt; # ℹ 446 more rows\n\n# all 1s by reviewing table manually\n# so YES all rows with the same visit_id have the same value for lcs_eligible\n\n# check if for a given visit_id with more than 1 row, all rows have the same value for hx_complete\nmfa_tobacco_dupl %&gt;%\n  group_by(visit_id) %&gt;%\n  summarise(hx_complete_unique = n_distinct(hx_complete)) %&gt;%\n  filter(hx_complete_unique &gt; 1)\n\n#&gt; # A tibble: 73 × 2\n#&gt;    visit_id hx_complete_unique\n#&gt;       &lt;dbl&gt;              &lt;int&gt;\n#&gt;  1 66725789                  2\n#&gt;  2 67660584                  2\n#&gt;  3 67878665                  2\n#&gt;  4 68105046                  2\n#&gt;  5 68129736                  2\n#&gt;  6 68156151                  2\n#&gt;  7 68167449                  2\n#&gt;  8 68190189                  2\n#&gt;  9 68249707                  2\n#&gt; 10 68345767                  2\n#&gt; # ℹ 63 more rows\n\n# checking to make sure this worked properly\nmfa_tobacco_dupl %&gt;%\n  group_by(visit_id) %&gt;%\n  summarise(hx_complete_unique = n_distinct(hx_complete)) %&gt;% \n  arrange(desc(hx_complete_unique))\n\n#&gt; # A tibble: 456 × 2\n#&gt;    visit_id hx_complete_unique\n#&gt;       &lt;dbl&gt;              &lt;int&gt;\n#&gt;  1 66725789                  2\n#&gt;  2 67660584                  2\n#&gt;  3 67878665                  2\n#&gt;  4 68105046                  2\n#&gt;  5 68129736                  2\n#&gt;  6 68156151                  2\n#&gt;  7 68167449                  2\n#&gt;  8 68190189                  2\n#&gt;  9 68249707                  2\n#&gt; 10 68345767                  2\n#&gt; # ℹ 446 more rows\n\n# so NO: 32 visit_ids have more than 1 hx_complete value (i.e. at least 1 \"Complete\" and at least 1 \"Not Complete\")\n\n# extract the 32 visit_ids with more than 1 hx_complete value\nmfa_tobacco_dupl_hx &lt;- mfa_tobacco_dupl %&gt;%\n  group_by(visit_id) %&gt;%\n  summarise(hx_complete_unique = n_distinct(hx_complete)) %&gt;% \n  filter(hx_complete_unique &gt; 1) %&gt;%\n  ungroup() %&gt;%\n  arrange(visit_id)\nglimpse(mfa_tobacco_dupl_hx)\n\n#&gt; Rows: 73\n#&gt; Columns: 2\n#&gt; $ visit_id           &lt;dbl&gt; 66725789, 67660584, 67878665, 68105046, 68129736, 6…\n#&gt; $ hx_complete_unique &lt;int&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n\n# select all rows in mfa_tobacco_dupl with visit_ids from mfa_tobacco_dupl_hx\nmfa_tobacco_dupl %&gt;%\n  filter(visit_id %in% mfa_tobacco_dupl_hx$visit_id) %&gt;% \n  select(visit_id, hx_complete)\n\n#&gt; # A tibble: 164 × 2\n#&gt;    visit_id hx_complete \n#&gt;       &lt;dbl&gt; &lt;chr&gt;       \n#&gt;  1 67660584 Not Complete\n#&gt;  2 67660584 Complete    \n#&gt;  3 68129736 Not Complete\n#&gt;  4 68129736 Complete    \n#&gt;  5 68988952 Complete    \n#&gt;  6 68988952 Complete    \n#&gt;  7 68988952 Not Complete\n#&gt;  8 68851466 Complete    \n#&gt;  9 68851466 Not Complete\n#&gt; 10 68851466 Complete    \n#&gt; # ℹ 154 more rows\n\n# of these 32 visit_ids, how many have hx_complete == \"Complete\"?\nmfa_tobacco_dupl %&gt;%\n  filter(visit_id %in% mfa_tobacco_dupl_hx$visit_id) %&gt;% \n  select(visit_id, hx_complete) %&gt;%\n  filter(hx_complete == \"Complete\") %&gt;%\n  distinct(visit_id) %&gt;%\n  arrange(visit_id)\n\n#&gt; # A tibble: 73 × 1\n#&gt;    visit_id\n#&gt;       &lt;dbl&gt;\n#&gt;  1 66725789\n#&gt;  2 67660584\n#&gt;  3 67878665\n#&gt;  4 68105046\n#&gt;  5 68129736\n#&gt;  6 68156151\n#&gt;  7 68167449\n#&gt;  8 68190189\n#&gt;  9 68249707\n#&gt; 10 68345767\n#&gt; # ℹ 63 more rows\n\n# this seems to say all 32\nmfa_tobacco_dupl %&gt;%\n  filter(visit_id %in% mfa_tobacco_dupl_hx$visit_id) %&gt;% \n  select(visit_id, hx_complete) %&gt;%\n  arrange(visit_id)\n\n#&gt; # A tibble: 164 × 2\n#&gt;    visit_id hx_complete \n#&gt;       &lt;dbl&gt; &lt;chr&gt;       \n#&gt;  1 66725789 Not Complete\n#&gt;  2 66725789 Complete    \n#&gt;  3 67660584 Not Complete\n#&gt;  4 67660584 Complete    \n#&gt;  5 67878665 Complete    \n#&gt;  6 67878665 Not Complete\n#&gt;  7 67878665 Complete    \n#&gt;  8 67878665 Not Complete\n#&gt;  9 68105046 Not Complete\n#&gt; 10 68105046 Complete    \n#&gt; # ℹ 154 more rows\n\n# it does look on manual check like all 32 have a Complete hx_complete value\n\n# create a new variable hx_complete_unique to count the number of unique hx_complete values for each visit_id to parallel the function of the mfa_tobacco_dupl_hx$visit_id list (but will work to select for both cases, i.e. where all hx_complete values are the same and where they are not)\nmfa_tobacco_dupl &lt;- mfa_tobacco_dupl %&gt;%\n  group_by(visit_id) %&gt;%\n  mutate(hx_complete_unique = n_distinct(hx_complete))\nglimpse(mfa_tobacco_dupl)\n\n#&gt; Rows: 1,009\n#&gt; Columns: 22\n#&gt; Groups: visit_id [456]\n#&gt; $ location                          &lt;chr&gt; \"Foggy Bottom\", \"Foggy Bottom\", \"Wes…\n#&gt; $ department                        &lt;chr&gt; \"FB PRIMARY CARE\", \"FB PRIMARY CARE\"…\n#&gt; $ visit_id                          &lt;dbl&gt; 68876021, 68876021, 68281253, 682812…\n#&gt; $ date                              &lt;dttm&gt; 2025-03-20, 2025-03-20, 2025-03-03,…\n#&gt; $ visit_type                        &lt;chr&gt; \"Office Visit\", \"Office Visit\", \"Off…\n#&gt; $ roomed_by                         &lt;chr&gt; \"PATTERSON, MYRAH\", \"PATTERSON, MYRA…\n#&gt; $ roomed_by_prov_type               &lt;chr&gt; \"Medical Assistant\", \"Medical Assist…\n#&gt; $ tobacco_user                      &lt;chr&gt; \"Quit\", \"Quit\", \"Quit\", \"Quit\", \"Qui…\n#&gt; $ smoking_from                      &lt;chr&gt; \"29952\", \"28491\", \"33604\", \"31778\", …\n#&gt; $ smoking_to                        &lt;chr&gt; \"29952\", \"29952\", \"33604\", \"33604\", …\n#&gt; $ pack_day                          &lt;chr&gt; \"0\", \"0.5\", \"0\", \"0.5\", \"0\", \"0.25\",…\n#&gt; $ years_smoking                     &lt;chr&gt; \"43.5\", \"4\", \"33.5\", \"5\", \"25.5\", \"1…\n#&gt; $ years_quitting                    &lt;chr&gt; \"43.5\", \"43.5\", \"33.5\", \"33.5\", \"25.…\n#&gt; $ total_pack_years                  &lt;chr&gt; \"47.5\", \"47.5\", \"38.5\", \"38.5\", \"36.…\n#&gt; $ start_date_count                  &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, …\n#&gt; $ quit_date_count                   &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, …\n#&gt; $ multiple_start_or_quit_dates_flag &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n#&gt; $ screened_for_lung_cancer          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, …\n#&gt; $ lcs_eligible                      &lt;chr&gt; \"Not Eligible\", \"Not Eligible\", \"Not…\n#&gt; $ hx_complete                       &lt;chr&gt; \"Complete\", \"Complete\", \"Complete\", …\n#&gt; $ roomed_by_ID                      &lt;dbl&gt; 15, 15, 45, 45, 48, 48, 48, 54, 54, …\n#&gt; $ hx_complete_unique                &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n\nmfa_tobacco_dupl %&gt;%\n  filter(hx_complete_unique &gt; 1) %&gt;%\n  count()\n\n#&gt; # A tibble: 73 × 2\n#&gt; # Groups:   visit_id [73]\n#&gt;    visit_id     n\n#&gt;       &lt;dbl&gt; &lt;int&gt;\n#&gt;  1 66725789     2\n#&gt;  2 67660584     2\n#&gt;  3 67878665     4\n#&gt;  4 68105046     2\n#&gt;  5 68129736     2\n#&gt;  6 68156151     2\n#&gt;  7 68167449     2\n#&gt;  8 68190189     2\n#&gt;  9 68249707     2\n#&gt; 10 68345767     3\n#&gt; # ℹ 63 more rows\n\n# correctly yields 32\nmfa_tobacco_dupl %&gt;%\n  filter(hx_complete_unique == 1) %&gt;%\n  count()\n\n#&gt; # A tibble: 383 × 2\n#&gt; # Groups:   visit_id [383]\n#&gt;    visit_id     n\n#&gt;       &lt;dbl&gt; &lt;int&gt;\n#&gt;  1 65175613     2\n#&gt;  2 65331404     2\n#&gt;  3 65559502     2\n#&gt;  4 65744148     2\n#&gt;  5 66223200     2\n#&gt;  6 66735924     2\n#&gt;  7 66768306     2\n#&gt;  8 66853773     2\n#&gt;  9 66885925     3\n#&gt; 10 66934461     2\n#&gt; # ℹ 373 more rows\n\n# yields 148\n148+32\n\n#&gt; [1] 180\n\n# correctly totals to 180 visit_ids with duplicates\n# now I can filter based on hx_complete_unique == 1 v &gt; 1 instead of the mfa_tobacco_dupl_hx$visit_id\n\n## so now I can remove duplicates from mfa_tobacco_dupl for visit_ids where NOT all hx_complete values are the same (and all should have at least one hx_complete == \"Complete\" value) by keeping the first instance where hx_complete == \"Complete\" and adding those rows to mfa_tobacco_data\nglimpse(mfa_tobacco_data)\n\n#&gt; Rows: 8,257\n#&gt; Columns: 21\n#&gt; $ location                          &lt;chr&gt; \"Bethesda\", \"Foggy Bottom\", \"Foggy B…\n#&gt; $ department                        &lt;chr&gt; \"BETHESDA PRIMARY CARE\", \"FB CARDIOL…\n#&gt; $ visit_id                          &lt;dbl&gt; 68488509, 68299325, 67850022, 680482…\n#&gt; $ date                              &lt;dttm&gt; 2025-03-07, 2025-03-27, 2025-03-12,…\n#&gt; $ visit_type                        &lt;chr&gt; \"Office Visit\", \"Office Visit\", \"Off…\n#&gt; $ roomed_by                         &lt;chr&gt; \"CHAVEZ, XIOMARA\", \"CHO, GUNHEE\", \"H…\n#&gt; $ roomed_by_prov_type               &lt;chr&gt; \"Medical Assistant\", \"Medical Assist…\n#&gt; $ tobacco_user                      &lt;chr&gt; \"Never\", \"Never\", \"Yes\", \"Never\", \"N…\n#&gt; $ smoking_from                      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ smoking_to                        &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ pack_day                          &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_smoking                     &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_quitting                    &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ total_pack_years                  &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ start_date_count                  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ quit_date_count                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ multiple_start_or_quit_dates_flag &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ screened_for_lung_cancer          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ lcs_eligible                      &lt;chr&gt; \"Not Eligible\", \"Not Eligible\", \"Not…\n#&gt; $ hx_complete                       &lt;chr&gt; \"Complete\", \"Complete\", \"Not Complet…\n#&gt; $ roomed_by_ID                      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1…\n\nmfa_tobacco_data &lt;- mfa_tobacco_data %&gt;%\n  bind_rows(\n    mfa_tobacco_dupl %&gt;%\n      filter(hx_complete_unique &gt; 1) %&gt;%\n      group_by(visit_id) %&gt;%\n      filter(hx_complete == \"Complete\") %&gt;% \n      slice(1) %&gt;% # this should keep the first instance where hx_complete == \"Complete\"\n      ungroup()\n  )\nglimpse(mfa_tobacco_data)\n\n#&gt; Rows: 8,330\n#&gt; Columns: 22\n#&gt; $ location                          &lt;chr&gt; \"Bethesda\", \"Foggy Bottom\", \"Foggy B…\n#&gt; $ department                        &lt;chr&gt; \"BETHESDA PRIMARY CARE\", \"FB CARDIOL…\n#&gt; $ visit_id                          &lt;dbl&gt; 68488509, 68299325, 67850022, 680482…\n#&gt; $ date                              &lt;dttm&gt; 2025-03-07, 2025-03-27, 2025-03-12,…\n#&gt; $ visit_type                        &lt;chr&gt; \"Office Visit\", \"Office Visit\", \"Off…\n#&gt; $ roomed_by                         &lt;chr&gt; \"CHAVEZ, XIOMARA\", \"CHO, GUNHEE\", \"H…\n#&gt; $ roomed_by_prov_type               &lt;chr&gt; \"Medical Assistant\", \"Medical Assist…\n#&gt; $ tobacco_user                      &lt;chr&gt; \"Never\", \"Never\", \"Yes\", \"Never\", \"N…\n#&gt; $ smoking_from                      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ smoking_to                        &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ pack_day                          &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_smoking                     &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_quitting                    &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ total_pack_years                  &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ start_date_count                  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ quit_date_count                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ multiple_start_or_quit_dates_flag &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ screened_for_lung_cancer          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ lcs_eligible                      &lt;chr&gt; \"Not Eligible\", \"Not Eligible\", \"Not…\n#&gt; $ hx_complete                       &lt;chr&gt; \"Complete\", \"Complete\", \"Not Complet…\n#&gt; $ roomed_by_ID                      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1…\n#&gt; $ hx_complete_unique                &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n\n2933-2901\n\n#&gt; [1] 32\n\n# 32 rows were correctly added to mfa_tobacco_data\n\n## now need to remove duplicates from mfa_tobacco_dupl for visit_ids where all hx_complete values are the same by keeping the first instance and adding those rows to mfa_tobacco_data\nmfa_tobacco_data &lt;- mfa_tobacco_data %&gt;%\n  bind_rows(\n    mfa_tobacco_dupl %&gt;%\n      filter(hx_complete_unique == 1) %&gt;%\n      group_by(visit_id) %&gt;%\n      slice(1) %&gt;% # this should keep the first instance \n      ungroup()\n  )\nglimpse(mfa_tobacco_data)\n\n#&gt; Rows: 8,713\n#&gt; Columns: 22\n#&gt; $ location                          &lt;chr&gt; \"Bethesda\", \"Foggy Bottom\", \"Foggy B…\n#&gt; $ department                        &lt;chr&gt; \"BETHESDA PRIMARY CARE\", \"FB CARDIOL…\n#&gt; $ visit_id                          &lt;dbl&gt; 68488509, 68299325, 67850022, 680482…\n#&gt; $ date                              &lt;dttm&gt; 2025-03-07, 2025-03-27, 2025-03-12,…\n#&gt; $ visit_type                        &lt;chr&gt; \"Office Visit\", \"Office Visit\", \"Off…\n#&gt; $ roomed_by                         &lt;chr&gt; \"CHAVEZ, XIOMARA\", \"CHO, GUNHEE\", \"H…\n#&gt; $ roomed_by_prov_type               &lt;chr&gt; \"Medical Assistant\", \"Medical Assist…\n#&gt; $ tobacco_user                      &lt;chr&gt; \"Never\", \"Never\", \"Yes\", \"Never\", \"N…\n#&gt; $ smoking_from                      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ smoking_to                        &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ pack_day                          &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_smoking                     &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_quitting                    &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ total_pack_years                  &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ start_date_count                  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ quit_date_count                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ multiple_start_or_quit_dates_flag &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ screened_for_lung_cancer          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ lcs_eligible                      &lt;chr&gt; \"Not Eligible\", \"Not Eligible\", \"Not…\n#&gt; $ hx_complete                       &lt;chr&gt; \"Complete\", \"Complete\", \"Not Complet…\n#&gt; $ roomed_by_ID                      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1…\n#&gt; $ hx_complete_unique                &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n\n3081-2933\n\n#&gt; [1] 148\n\n# 148 rows were correctly added to mfa_tobacco_data\n3081-2901\n\n#&gt; [1] 180\n\n# 180 total rows were added to mfa_tobacco_data, which is the same as the number of visit_ids with duplicates in mfa_tobacco_dupl\nmfa_tobacco_data |&gt; \n  distinct(visit_id)\n\n#&gt; # A tibble: 8,713 × 1\n#&gt;    visit_id\n#&gt;       &lt;dbl&gt;\n#&gt;  1 68488509\n#&gt;  2 68299325\n#&gt;  3 67850022\n#&gt;  4 68048243\n#&gt;  5 68767627\n#&gt;  6 68528285\n#&gt;  7 68436688\n#&gt;  8 67916852\n#&gt;  9 68102286\n#&gt; 10 68122559\n#&gt; # ℹ 8,703 more rows\n\n# 3081 unique visit_ids in mfa_tobacco_data matches 3081 rows in mfa_tobacco_data"
  },
  {
    "objectID": "data_init.html#remove-unnecessary-columns",
    "href": "data_init.html#remove-unnecessary-columns",
    "title": "dataset initialization (de-duplicate & anonymize)",
    "section": "remove unnecessary columns",
    "text": "remove unnecessary columns\n\nglimpse(mfa_tobacco_data)\n\n#&gt; Rows: 8,713\n#&gt; Columns: 22\n#&gt; $ location                          &lt;chr&gt; \"Bethesda\", \"Foggy Bottom\", \"Foggy B…\n#&gt; $ department                        &lt;chr&gt; \"BETHESDA PRIMARY CARE\", \"FB CARDIOL…\n#&gt; $ visit_id                          &lt;dbl&gt; 68488509, 68299325, 67850022, 680482…\n#&gt; $ date                              &lt;dttm&gt; 2025-03-07, 2025-03-27, 2025-03-12,…\n#&gt; $ visit_type                        &lt;chr&gt; \"Office Visit\", \"Office Visit\", \"Off…\n#&gt; $ roomed_by                         &lt;chr&gt; \"CHAVEZ, XIOMARA\", \"CHO, GUNHEE\", \"H…\n#&gt; $ roomed_by_prov_type               &lt;chr&gt; \"Medical Assistant\", \"Medical Assist…\n#&gt; $ tobacco_user                      &lt;chr&gt; \"Never\", \"Never\", \"Yes\", \"Never\", \"N…\n#&gt; $ smoking_from                      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ smoking_to                        &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ pack_day                          &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_smoking                     &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ years_quitting                    &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ total_pack_years                  &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NUL…\n#&gt; $ start_date_count                  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ quit_date_count                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n#&gt; $ multiple_start_or_quit_dates_flag &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ screened_for_lung_cancer          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ lcs_eligible                      &lt;chr&gt; \"Not Eligible\", \"Not Eligible\", \"Not…\n#&gt; $ hx_complete                       &lt;chr&gt; \"Complete\", \"Complete\", \"Not Complet…\n#&gt; $ roomed_by_ID                      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1…\n#&gt; $ hx_complete_unique                &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n\ntobacco_data &lt;- mfa_tobacco_data %&gt;%\n  select(\n    location,\n    department,\n    date,\n    roomed_by_ID,\n    roomed_by_prov_type,\n    tobacco_user,\n    hx_complete,\n    lcs_eligible\n  )\nglimpse(tobacco_data)\n\n#&gt; Rows: 8,713\n#&gt; Columns: 8\n#&gt; $ location            &lt;chr&gt; \"Bethesda\", \"Foggy Bottom\", \"Foggy Bottom\", \"Foggy…\n#&gt; $ department          &lt;chr&gt; \"BETHESDA PRIMARY CARE\", \"FB CARDIOLOGY\", \"FB NEUR…\n#&gt; $ date                &lt;dttm&gt; 2025-03-07, 2025-03-27, 2025-03-12, 2025-03-24, 2…\n#&gt; $ roomed_by_ID        &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,…\n#&gt; $ roomed_by_prov_type &lt;chr&gt; \"Medical Assistant\", \"Medical Assistant\", \"Medical…\n#&gt; $ tobacco_user        &lt;chr&gt; \"Never\", \"Never\", \"Yes\", \"Never\", \"Never\", \"Quit\",…\n#&gt; $ hx_complete         &lt;chr&gt; \"Complete\", \"Complete\", \"Not Complete\", \"Complete\"…\n#&gt; $ lcs_eligible        &lt;chr&gt; \"Not Eligible\", \"Not Eligible\", \"Not Eligible\", \"N…"
  },
  {
    "objectID": "data_init.html#output-the-cleaned-data-to-csv",
    "href": "data_init.html#output-the-cleaned-data-to-csv",
    "title": "dataset initialization (de-duplicate & anonymize)",
    "section": "output the cleaned data to csv",
    "text": "output the cleaned data to csv\n\nwrite.csv(tobacco_data, \"tobacco_data_clean.csv\", row.names = FALSE)"
  },
  {
    "objectID": "index.html#visualization-1-title-here",
    "href": "index.html#visualization-1-title-here",
    "title": "Final Project: [YOUR TITLE HERE] | PUBH 6199: Visualizing Data with R",
    "section": "Visualization 1: [Title Here]",
    "text": "Visualization 1: [Title Here]\nDescribe what this plot shows, and why it’s important.\n\n\nCode\n# your code here"
  },
  {
    "objectID": "index.html#research-question",
    "href": "index.html#research-question",
    "title": "Final Project: GW Tobacco History Completeness Pilot Dashboard | PUBH 6199: Visualizing Data with R",
    "section": "Research Question",
    "text": "Research Question\nWe were interested in examining (and tracking) the completeness rates of tobacco history among adult patient visits at GW Medicine as part of an ongoing pilot program to increase completeness rates.\nPrimary Research Q\n**How does the percentage of visits with complete tobacco history compare between specialties/staff participating (“Pilot”) versus not participating (“Non-Pilot”) in the pilot program?** Has that changed over time (especially since the start of the pilot program)?\nSecondary Research Q\nWho are the top and bottom performers among all specialties and staff?"
  },
  {
    "objectID": "index.html#data-sources",
    "href": "index.html#data-sources",
    "title": "Final Project: GW Tobacco History Completeness Pilot Dashboard | PUBH 6199: Visualizing Data with R",
    "section": "Data Sources",
    "text": "Data Sources\nData routinely collected for performance tracking as part of this approved QI project was fully de-identified and modified for use in this project.\n\nData De-identification - The primary data was fully de-identified of any patient-related data.\n- Furthermore, the staff were also fully de-identified and assigned a unique ID number (and for the purposes of this project, no master list/link was retained; re-identification is not possible from the anonymized datasets).\n\nKey Variables Data was structured such that each data point (row) reflects a visit (as each visit is an opportunity to collect a complete tobacco history), not a patient."
  },
  {
    "objectID": "index.html#data-wrangling",
    "href": "index.html#data-wrangling",
    "title": "Final Project: GW Tobacco History Completeness Pilot Dashboard | PUBH 6199: Visualizing Data with R",
    "section": "Data Wrangling",
    "text": "Data Wrangling\nSeveral R packages to clean and explore the data. Tidyverse handled data manipulation, lubridate helped parse dates and group data by week and month, ggplot2 was for creating bar charts, shiny made an interactive dashboard, and quarto was for putting the report together. We filtered out “Pilot” and “Non-Pilot” groups to keep things focused on real specialties. Then we calculated how often each specialty completed tobacco history documentation, making sure to compare fairly since visit numbers vary.\n\n\nCode\n#| eval: true\ninstall.packages(\"shiny\")\n\n\n#&gt; The following package(s) will be installed:\n#&gt; - shiny [1.11.0]\n#&gt; These packages will be installed into \"~/Library/Mobile Documents/com~apple~CloudDocs/GWU/visualizing with R/hw6-bart/renv/library/macos/R-4.4/aarch64-apple-darwin20\".\n#&gt; \n#&gt; # Installing packages --------------------------------------------------------\n#&gt; - Installing shiny ...                          OK [linked from cache]\n#&gt; Successfully installed 1 package in 2.6 milliseconds.\n\n\nCode\ninstall.packages(\"ggrepel\")\n\n\n#&gt; The following package(s) will be installed:\n#&gt; - ggrepel [0.9.6]\n#&gt; These packages will be installed into \"~/Library/Mobile Documents/com~apple~CloudDocs/GWU/visualizing with R/hw6-bart/renv/library/macos/R-4.4/aarch64-apple-darwin20\".\n#&gt; \n#&gt; # Installing packages --------------------------------------------------------\n#&gt; - Installing ggrepel ...                        OK [linked from cache]\n#&gt; Successfully installed 1 package in 1.7 milliseconds.\n\n\nCode\ninstall.packages(\"viridis\")\n\n\n#&gt; The following package(s) will be installed:\n#&gt; - viridis [0.6.5]\n#&gt; These packages will be installed into \"~/Library/Mobile Documents/com~apple~CloudDocs/GWU/visualizing with R/hw6-bart/renv/library/macos/R-4.4/aarch64-apple-darwin20\".\n#&gt; \n#&gt; # Installing packages --------------------------------------------------------\n#&gt; - Installing viridis ...                        OK [linked from cache]\n#&gt; Successfully installed 1 package in 1.8 milliseconds.\n\n\nCode\n#| output: FALSE\n\nlibrary(viridisLite)\nlibrary(viridis)\ntobacco_data_weekly_modified &lt;- read_csv(\"data/tobacco_data_weeklymodified.csv\")\n\ntobacco_data_monthly_moified &lt;- read_csv(\"data/tobacco_data_monthlymodified.csv\")"
  },
  {
    "objectID": "index.html#data-visualizations",
    "href": "index.html#data-visualizations",
    "title": "Final Project: GW Tobacco History Completeness Pilot Dashboard | PUBH 6199: Visualizing Data with R",
    "section": "Data Visualizations",
    "text": "Data Visualizations\n\nVisualization 1: “Highest and Lowest Departments with Complete Tobacco History (Weekly)”\nA weekly bar chart showing documentation rates by specialty — Nephrology and Gastroenterology came out on top, while Infectious Disease and Radiation Oncology were at the bottom. This plot will help providers diagnoses lung issues sooner.\n\n\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggrepel)\nlibrary(viridis)\n\nsummary_groups &lt;- tobacco_data_weekly_modified %&gt;%\n  filter(!group %in% c(\"Pilot\", \"Non-Pilot\")) %&gt;%\n  filter(week_num == max(week_num)) %&gt;%\n  group_by(group) %&gt;%\n  summarize(final_value = max(percent_complete, na.rm = TRUE)) %&gt;%\n  arrange(desc(final_value))\n\ntop_groups &lt;- summary_groups %&gt;% slice_head(n = 2) %&gt;% pull(group)\nbottom_groups &lt;- summary_groups %&gt;% slice_tail(n = 2) %&gt;% pull(group)\nhighlight_groups &lt;- c(top_groups, bottom_groups)\n\nhighlight_colors &lt;- c(\n  setNames(rep(\"steelblue\", 2), top_groups),\n  setNames(rep(\"firebrick\", 2), bottom_groups),\n  \"Other\" = \"gray80\"\n)\n\nggplot(\n  tobacco_data_weekly_modified %&gt;%\n    filter(!group %in% c(\"Pilot\", \"Non-Pilot\")) %&gt;%\n    mutate(line_group = ifelse(group %in% highlight_groups, group, \"Other\")),\n  aes(x = week_num, y = percent_complete, group = group)\n) +\n  geom_line(aes(color = line_group, size = line_group, alpha = line_group)) +\n  geom_point(aes(color = line_group, alpha = line_group), size = 2) +\n  geom_text_repel(\n    data = tobacco_data_weekly_modified %&gt;%\n      filter(group %in% highlight_groups) %&gt;%\n      group_by(group) %&gt;%\n      filter(week_num == max(week_num)),\n    aes(label = group, color = group),\n    nudge_x = 0.3,\n    hjust = 0,\n    segment.color = NA,\n    size = 4,\n    show.legend = FALSE\n  ) +\n  scale_color_manual(values = highlight_colors) +\n  scale_size_manual(values = c(setNames(rep(1.4, 4), highlight_groups), \"Other\" = 0.6)) +\n  scale_alpha_manual(values = c(setNames(rep(1, 4), highlight_groups), \"Other\" = 0.3)) +\n  scale_x_continuous(\n    breaks = unique(tobacco_data_weekly_modified$week_num),\n    labels = paste(\"Week\", unique(tobacco_data_weekly_modified$week_num)),\n    expand = expansion(mult = c(0.05, 0.2))\n  ) +\n  labs(\n    title = \"Highest and Lowest Departments with Complete Tobacco History (Weekly)\",\n    x = \"Week of\",\n    y = \"Percent Complete\"\n  ) +\n  theme_minimal() +  \n  theme(\n    legend.position = \"none\",\n    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)  \n  )\n\n\n\n\n\n\n\n\n\n\n\nVisualization 2: Highest and Lowest Departments Complete Tobacco History (Monthly)“,\nThis plot shows the departments with the highest and lowest percentages of a complete tobacco history by month and this plot will help providers diagnoses lung issues sooner.This shows a slightly different picture — Physical Medicine and Rehabilitation did best, and Rheumatology and Radiation Oncology were lowest. \n\n\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggrepel)\nlibrary(viridis)\n\nclean_data &lt;- tobacco_data_monthly_moified %&gt;%\n  filter(!group %in% c(\"Pilot\", \"Non-Pilot\", \"Geriatrics (Ingleside)\"))\n\nsummary_groups &lt;- clean_data %&gt;%\n  filter(month_num == max(month_num)) %&gt;%\n  group_by(group) %&gt;%\n  summarize(final_value = max(percent_complete, na.rm = TRUE)) %&gt;%\n  arrange(desc(final_value))\n\ntop_groups &lt;- summary_groups %&gt;% slice_head(n = 2) %&gt;% pull(group)\nbottom_groups &lt;- summary_groups %&gt;% slice_tail(n = 2) %&gt;% pull(group)\nhighlight_groups &lt;- c(top_groups, bottom_groups)\n\nhighlight_colors &lt;- c(\n  setNames(rep(\"steelblue\", 2), top_groups),\n  setNames(rep(\"firebrick\", 2), bottom_groups),\n  \"Other\" = \"gray80\"\n)\n\nplot_data &lt;- clean_data %&gt;%\n  mutate(line_group = ifelse(group %in% highlight_groups, group, \"Other\"))\n\nggplot(plot_data, aes(x = month_num, y = percent_complete, group = group)) +\n  geom_line(aes(color = line_group, size = line_group, alpha = line_group)) +\n  geom_point(aes(color = line_group, alpha = line_group), size = 2) +\n  geom_text_repel(\n    data = plot_data %&gt;%\n      filter(group %in% highlight_groups) %&gt;%\n      group_by(group) %&gt;%\n      filter(month_num == max(month_num)),\n    aes(label = group, color = group),\n    nudge_x = 0.3,\n    hjust = 0,\n    segment.color = NA,\n    size = 4,\n    show.legend = FALSE\n  ) +\n  scale_color_manual(values = highlight_colors) +\n  scale_size_manual(values = c(setNames(rep(1.4, 4), highlight_groups), \"Other\" = 0.6)) +\n  scale_alpha_manual(values = c(setNames(rep(1, 4), highlight_groups), \"Other\" = 0.3)) +\n  scale_x_continuous(\n    breaks = 1:12,\n    labels = month.abb[1:12], \n    expand = expansion(mult = c(0.05, 0.2))\n  ) +\n  scale_y_continuous(\n    limits = c(0, 1),\n    labels = scales::percent_format(accuracy = 1)\n  ) +\n  labs(\n    title = \"Highest and Lowest Departments Complete Tobacco History (Monthly)\",\n    x = \"Month\",\n    y = \"Percent Complete\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\nShiny app: GW Tobacco History Initiative Dashboard\nThe Shiny app is a dashboard that allows users to interactively explore the completeness of tobacco history documentation across different specialties & staff at GW Medicine. Users can select time intervals and ranges to view trends, compare performance between pilot and non-pilot groups, and identify top performers.\nClick here to open the interactive Shiny app\n\nFeatures\n\nInteractive Filters: Users can view data by:\n\n\ntime intervals (weekly or monthly) \nby pilot/non-pilot groups\n\nfor specialties or staff\n\n\nVisualizations: The app includes bar charts that show the completeness rates of tobacco history documentation by specialty and staff, highlighting the top and bottom performers.\n\nBar Chart of Pilot v Non-Pilot Groups:\nThis chart compares the completeness rates of tobacco history documentation between pilot and non-pilot groups over time, allowing us to explore how the pilot program has impacted complete documentation rates.\n\nTop 10 Leader Board:\nThis chart displays the top 10 specialties or staff with the highest average completeness rates for the selected time period, allowing us to identify the best performers for positive feedback & to motivate peers.\n\n\n\n\n\n\n\n\n\nShiny Assistant’s response\n\n\n\n\nIt was a pleasant surprise that actually completion rates are higher than expected overall, with most being between 70-80%.\n\nThere was more variability among % complete among staff than among specialties.\n\nThere has disappointingly NOT been a clear trend toward improvement over other specialties/staff as currently visualized among the pilot group, but this is still a work in progress!"
  },
  {
    "objectID": "scratch/todo.html",
    "href": "scratch/todo.html",
    "title": "TO-DO",
    "section": "",
    "text": "requirements\n\nData scraping and cleaning complete (using real world datasets, do not use R built-in data)\nAt least one visualization already implemented, and draft for 2-3 more visualizations\n– Sora & Ashlan by Tues 06:00\n[x] @SORA = bar graph\n[x] @ASHLAN = 1st line graph\n\nIf choosing R shiny app, rough webpage design and structure has to be done and implemented (placeholders for visualizations)\n– @SORA to do Tues day before 16:00 1:1 meeting\n\n\n\n\nChoose one from the following three options:\n1. Same Question, Different Audiences (3 static charts): Create three visualizations that answer the same question, each designed for a different audience (e.g., general public, policy makers, technical experts).\n2. Same Data, Different Questions (3 static charts): Use the same dataset to answer three different but related questions, each with its own focused visualization.\n3. Interactive Dashboard (1 app with 3 components): Build an interactive dashboard (e.g., with shiny, plotly, or similar tools) that includes at least three visual components for exploring your data dynamically.\nrequirements\n\nindex.qmd\n“Accompanying your visualizations, you should also include a write-up around 500-1000 words that consists of an introduction, research questions, data sources, data wrangling, data visualizations, findings, and conclusion.”\n[ ] @ASHLAN: “write-up”: introduction, data wrangling, data visualizations (Visualization 1, Visualization 2), references [ ] @SORA = “write-up”: research questions, data sources, data visualizations (Shiny dashboard), interpretation, limitations, conclusion\nA README.md file in your GitHub repo that describes your project, how to view it, and any dependencies\n– @ASHLAN\n\n2nd line graph\n– @ASHLAN\n\nfinal dashboard/Shiny app\n– @SORA on Wed\n\npublish the Shiny app to Shiny.io\n– @SORA on Wed\n\nfinal push of the git project\n– @TBD\n\n\n\n\n\n10 minutes presentation\n\nno slides :)\n\n\n@SORA\n- [ ] What questions do you set out to answer with your visualizations? Why are they important?\n- [ ] Your data source and why they are chosen to answer your questions\n- [ ] Your intended audience\n@ASHLAN\n- [ ] Two to three visualization design choices and how they help tell your story\n- [ ] Two to three takeaways from your visualizations that your audience should remember\n- [ ] Live demo of your visualizations (if applicable)\n@SORA & @ASHLAN\n- – 30min before class Thurs and/or text\n- [ ] One to two challenges you encountered during this project and how you overcame them\n- [ ] One to two achievements you are proud of in this project\n\n\nThe presentation format is flexible, bring your laptop to present, and submit the presentation and final data visualization product as HW6\n\nAlso see index.qmd for the final project requirements and deliverables."
  },
  {
    "objectID": "scratch/todo.html#prototype-v1",
    "href": "scratch/todo.html#prototype-v1",
    "title": "TO-DO",
    "section": "",
    "text": "requirements\n\nData scraping and cleaning complete (using real world datasets, do not use R built-in data)\nAt least one visualization already implemented, and draft for 2-3 more visualizations\n– Sora & Ashlan by Tues 06:00\n[x] @SORA = bar graph\n[x] @ASHLAN = 1st line graph\n\nIf choosing R shiny app, rough webpage design and structure has to be done and implemented (placeholders for visualizations)\n– @SORA to do Tues day before 16:00 1:1 meeting"
  },
  {
    "objectID": "scratch/todo.html#final-data-visualization-product",
    "href": "scratch/todo.html#final-data-visualization-product",
    "title": "TO-DO",
    "section": "",
    "text": "Choose one from the following three options:\n1. Same Question, Different Audiences (3 static charts): Create three visualizations that answer the same question, each designed for a different audience (e.g., general public, policy makers, technical experts).\n2. Same Data, Different Questions (3 static charts): Use the same dataset to answer three different but related questions, each with its own focused visualization.\n3. Interactive Dashboard (1 app with 3 components): Build an interactive dashboard (e.g., with shiny, plotly, or similar tools) that includes at least three visual components for exploring your data dynamically.\nrequirements\n\nindex.qmd\n“Accompanying your visualizations, you should also include a write-up around 500-1000 words that consists of an introduction, research questions, data sources, data wrangling, data visualizations, findings, and conclusion.”\n[ ] @ASHLAN: “write-up”: introduction, data wrangling, data visualizations (Visualization 1, Visualization 2), references [ ] @SORA = “write-up”: research questions, data sources, data visualizations (Shiny dashboard), interpretation, limitations, conclusion\nA README.md file in your GitHub repo that describes your project, how to view it, and any dependencies\n– @ASHLAN\n\n2nd line graph\n– @ASHLAN\n\nfinal dashboard/Shiny app\n– @SORA on Wed\n\npublish the Shiny app to Shiny.io\n– @SORA on Wed\n\nfinal push of the git project\n– @TBD"
  },
  {
    "objectID": "scratch/todo.html#final-project-presentation",
    "href": "scratch/todo.html#final-project-presentation",
    "title": "TO-DO",
    "section": "",
    "text": "10 minutes presentation\n\nno slides :)\n\n\n@SORA\n- [ ] What questions do you set out to answer with your visualizations? Why are they important?\n- [ ] Your data source and why they are chosen to answer your questions\n- [ ] Your intended audience\n@ASHLAN\n- [ ] Two to three visualization design choices and how they help tell your story\n- [ ] Two to three takeaways from your visualizations that your audience should remember\n- [ ] Live demo of your visualizations (if applicable)\n@SORA & @ASHLAN\n- – 30min before class Thurs and/or text\n- [ ] One to two challenges you encountered during this project and how you overcame them\n- [ ] One to two achievements you are proud of in this project\n\n\nThe presentation format is flexible, bring your laptop to present, and submit the presentation and final data visualization product as HW6\n\nAlso see index.qmd for the final project requirements and deliverables."
  },
  {
    "objectID": "scratch/4-lab4.html",
    "href": "scratch/4-lab4.html",
    "title": "Lab 4",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 4-lab4.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "scratch/4-lab4.html#before-your-start-the-lab-notebook",
    "href": "scratch/4-lab4.html#before-your-start-the-lab-notebook",
    "title": "Lab 4",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 4-lab4.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "scratch/4-lab4.html#overview-of-lab4",
    "href": "scratch/4-lab4.html#overview-of-lab4",
    "title": "Lab 4",
    "section": "Overview of Lab4",
    "text": "Overview of Lab4\nThere are two parts of this lab notebook. In first part, you will discuss team policies with your teammate and document them. In the second part, you will develop a project plan to guide the development of your final project.\nSkills practiced:\n\nUsing GitHub flow for team collaboration\nDocumenting team policies\nDeveloping a project plan"
  },
  {
    "objectID": "scratch/4-lab4.html#part-1-team-policies",
    "href": "scratch/4-lab4.html#part-1-team-policies",
    "title": "Lab 4",
    "section": "Part 1: Team Policies",
    "text": "Part 1: Team Policies\n\n1.1. How and when you will meet? Regular meeting time, location, etc.\n\n\n\n\n\n\nYour Answer\n\n\n\nWe will set specifics as we go and will check in at the end of each meeting to discuss meeting next.\n\n\n\n\n\n1.2. How you will communicate outside of meetings? Slack, email, etc.\n\n\n\n\n\n\nYour Answer\n\n\n\ntexting for personal/quick questions & slack for code\n\n\n\n\n\n1.3. How you will collaborate on implementing the project? GitHub, Google Docs, etc.\n\n\n\n\n\n\nYour Answer\n\n\n\ngithub and email datasets.\n\n\n\n\n\n1.4. How you will review each other’s work? code reviews, feedback sessions, etc.\n\n\n\n\n\n\nYour Answer\n\n\n\ncode reviews and live working sessions.\n\n\n\n\n\n1.5. How you will deal with non-performing members?\n\n\n\n\n\n\nYour Answer\n\n\n\nThere’s only two of us. We are committed to being open and honest.\n\n\n\n\n1.6 Start a TODO list\n\n\n\n\n\n\nYour Answer\n\n\n\n\n\n\n\n\n\n\n\n\nItem\nDo By\nDeadline\nPerson responsible\n\n\n\n\ncreate & share (in GitHub repo) anonymized dataset\n06/15/25\nN/A\nSora\n\n\ncommit completed lab4\n06/15/25\n06/16/25\nboth\n\n\nclean the dataset\n06/17/25\nN/A\nAshlan\n\n\ndivide tasks for creating Shiny app\n06/17/25 (after class)\nN/A\nboth\n\n\ncreate Shiny app (1 branch)\n06/19/25 23:59\nN/A\nboth\n\n\nmerge app work\n06/21/25\nN/A\nboth\n\n\njoint session/create working Shiny app prototype\n06/21/25\n06/24/25\nboth\n\n\ncreate Quarto slides draft for presentation\n06/22/25\nN/A\nSora\n\n\nrevise Quarto slides (background)\n06/23/25\nN/A\nAshlan\n\n\nfinalize Shiny app dashboard\n06/25/25\n06/25/25\nboth\n\n\npractice/finalize presentation\n06/25/25\n06/26/25\nboth"
  },
  {
    "objectID": "scratch/4-lab4.html#part-2-project-plan",
    "href": "scratch/4-lab4.html#part-2-project-plan",
    "title": "Lab 4",
    "section": "Part 2: Project plan",
    "text": "Part 2: Project plan\n\n2.1. What is the name of your team? Who are the contributing members?\n\n\n\n\n\n\nYour Answer\n\n\n\nTeam Name: Bart Contributing Members: Sora Ely, Ashlan Jackson\n\n\n\n\n2.2. Define the topic, goals, and tasks of your project (300 - 400 words)\n\n\n\n\n\n\nYour Answer\n\n\n\nTOPIC\nOur project will focus on smoking history completeness within the GW clinical system, as part of an ongoing intervention.\nGOALS\nThe primary goal is to create an interactive dashboard to allow intervention participants to view their individual or departmental smoking history completeness, and to compare to other staff and/or departments as well as the entire GW clinical system.\nTASKS\n- Clean the data.\n- Complete Lab 4/create project plan. - Build the dashboard.\n- Create a Shiny 2-files app.\n- Create a global.R file to load the data and any necessary libraries.\n- Create a server.R file.\n- Create a ui.R file.\n\n\n\n\n\n2.3. Describe the data you will use, including:\n\nSource of the data\nHow you will access the data\nHow you will clean the data\n\n\n\n\n\n\n\nYour Answer\n\n\n\nSOURCE\nSora’s QI project data (fully anonymized/deidentified)\nACCESS\nstored in GitHub repo\nCLEANING\nData will already be de-duplicated, so we will just need to format the column names, reformat values as needed to analyzable formats, and remove any unnecessary columns.\n\n\n\n\n2.4. Include at least 3 sketches of visualization ideas for your project\n\n% complete per time interval by pilot v non-pilot depts\n= bar chart by aggregated pilot & non-pilot depts\nfor the selected time interval & number of intervals\ninteractivity: select time interval (w v mo) & number of intervals (up to max available 12w/3mo) – will set the parameters for all 3 visualizations\n\n\nsee dashboard sketch below (top graph)\n\n% complete by dept in pilot depts compared to non-pilot depts over time\n= line plot over time by selected dept(s) v non-pilot depts\nfor the selected time interval & number of intervals\ninteractivity: select any combination of pilot dept(s) and/or all pilot depts (aggregated)\nwill always include comparison to non-pilot depts\n\n\nsee dashboard sketch below (middle graph)\n\n% complete by staff in pilot depts compared to non-pilot depts over time\n= line plot over time by selected staff in pilot depts v staff in non-pilot depts\nfor the selected time interval & number of intervals\ninteractivity: select any combination of staff in the pilot depts and/or all staff in the pilot depts (aggregated)\nwill always include comparison to non-pilot depts\n\n\nsee dashboard sketch below (bottom graph)\n\n\n2.5. A sketch of your shiny app layout if you choose this option. If you choose the static visualization option, please describe the storytelling flow of how the three data visualizations connect with each other\n\n\n\n\n\n\nYour Answer\n\n\n\n\n\n\n\n\n2.6. A timeline of your project, including milestones and deadlines\n\n\n\n\n\n\nYour Answer\n\n\n\n\n\n\nMilestone\nDo By\nDeadline\nPerson Responsible\n\n\n\n\nLab4\n06/15/25\n06/16/25\nboth\n\n\nPrototype/1:1\n\n06/24/25\nboth\n\n\nWorking dashboard\n06/25/25\n06/24/25\nboth\n\n\nPresentation slides\n06/25/25\n06/24/25\nboth\n\n\nFinal presentation\n06/26/25\n06/26/26\nboth\n\n\n\n\n\n\n\n2.7. A feature list, including: must-have, good-to-have, optional\n\n\n\n\n\n\nYour Answer\n\n\n\nMust-have features:\n\nFeature 1: interactive\nFeature 2: color-coded\nFeature 3: filterable\nFeature 4: user-friendly\n\nGood-to-have features:\n\nFeature 1: tailored to audience\nFeature 2: scalability\nFeature 3: compelling story-telling\n\nOptional features:\n\nFeature 1: accessibility\nFeature 2: correlate with lung cancer screening rate data\n\n\n\n\n\n2.8. A description of team roles and responsibilities\n\n\n\n\n\n\nYour Answer\n\n\n\nMost of the work will be done collaboratively.\nWe will check in at each meeting about next steps and next deadline/timeline.\nAshlan will take the lead on data cleaning, while Sora will take the lead on the Quarto slides.\nWe will evenly split other work."
  },
  {
    "objectID": "scratch/4-lab4.html#save-and-push-your-work",
    "href": "scratch/4-lab4.html#save-and-push-your-work",
    "title": "Lab 4",
    "section": "Save and Push Your Work",
    "text": "Save and Push Your Work\nRemember to save your .qmd and render the HTML output before committing to GitHub.\n\n\nCode\ngit add 4-lab4.qmd 4-lab4.html\ngit commit -m \"Complete Lab 4\"\ngit push"
  }
]